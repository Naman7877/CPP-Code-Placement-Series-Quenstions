ListNode* sortList(ListNode* head) {
        
        if(head==NULL || head->next==NULL)
        {
            return head;
        }
        
        ListNode* slow=head;
        ListNode* fast=head;
        ListNode* temp;
        
        while(fast!=NULL && fast->next!=NULL)
        {
            temp=slow;
            slow=slow->next;
            fast=fast->next->next;
            
        }
        temp->next=NULL;
        
        ListNode* l1=sortList(head);
        ListNode* l2=sortList(slow);
        
        
        return mergesort(l1,l2);
    }
    
    
    ListNode* mergesort(ListNode* l1,ListNode* l2)
    {
        ListNode* n;
        if(l1==NULL)
        {
            return l2;
        }
        else if(l2==NULL)
        {
            return l1;
        }
        
        if(l1->val <= l2->val)
        {
            n=l1;
            n->next=mergesort(l1->next,l2);
        }
        else
        {
            n=l2;
            n->next=mergesort(l1,l2->next);
        }
        
        return n;
    }
